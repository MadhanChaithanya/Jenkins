Jenkins Intro:
==============
- Jenkins is an Open-source automation server that is used to automate all sorts of tasks related to building, testing and deliverying,
  or even deploying the software
- Automates the SDLC, so errors can be detected at a very early stage of the development.
- Entirely written in Java, so portable to all major platforms. Need Java 8+, Recommended Java 11
- Can run as a servlet inside Tomcat, Container or as Standalone application.

- Few of the features of Jenkins that make it the first choice for a user are:
	1. Open Source
	2. Easy Installation
	3. Plugins. ~2000	
	4. Easy Configuration and Extensible
	5. Active Community
	6. Master-Slave architecture to manage distributed builds.
	7. Inbuilt Jetty Webserver. Can be deployed in Tomcat.

Jenkins History:
================
- Jenkins was originally developed under the name Hudson back in 2004 by the organization sun microsystems.
- Slowly Hudson started becoming populat with other companies and other people.
- When sun microsystems were brought over by oracle they kept the project but there were conflicts between the community supporting 
  hudson and oracle. so it was decided that the tool would be split into two; something oracle could call its
  own, hudson and Jenkins which was to be completely community driven project.
  
- Though both of them originally shared similar source trees, the tools are now quite different and 
  Jenkins has become more popular than ever now. it is now one of the most used CI/CD tools in the industry out there.
  
What Jenkins can do?
====================
- Clone your source code from VCS.
- Build your application using build tools such as Gradle, Maven etc.
- Automation testing using test frameworks such as Selenium, Junit, Pytest, Robot etc.
- Automated deployments to various environments
- Role based access control to various jobs and pipelines.
- Execute scripts using windows terminal and linux shell
- Post build actions such as Sending slack notfications, emails, printing test reports etc.
- Integration with third party tools like Nexus, SonarQube etc
- Extension the functionality by using various plugins (~2000)

Jenkins Plugins:
================
- Jenkins has plugin repository where you can download .hpi file and upload it your server.
- Upload at Manage Jenkins -> Manage Plugins -> Advanced.
- or copy tp plugins directory of Jenkins Home(/var/lib/jenkins)

		https://plugins.jenkins.io/
		
	- Github Plugins
	- Maven and Junit Plugin
	- Deploy to container Plugin
	- Build Pipeline
	- Docker Plugin
	- Jira Plugin
	- Mailer Plugin
	- Slack Notification Plugin
	- Amazon EC2 Plugin
	- Test Result Analyzer
	- Blue Ocean

Jenkins Master-Slave:
=====================
A Standalone jenkins instance can grow fairly quickly into a disk-munching, CPU-eating monster.
To prevent this from happening, we can scale Jenkins by implementing a slave node architecture, which can help us 
offload some of the responsibilities of the master Jenkins instance.

A Jenkins slave node is simply a device configured to act as an job executor on behalf of the master.
The Jenkins master simply represents the base installation of Jenkins. 
The master will continue to perform basic operations and serve the user interface, while the slaves do the heavy
lifting.

Jenkins Master:
- Holds all key configurations
- Acts like a controller or an orchestrator
- Scheduling and Monitoring build jobs
- dispatching build to the slaves.
- monitor the slaves (online and offline)
- Recording and presenting the build results.
- A Master instance of jenkins can also execute build jobs directly.

Jenkins Slave:
- A slave is a Java executable that runs on a remote machine
- Listens to requests from the Master and executes build jobs dispatched by the Master.
- slaves can run on a variety of operating systems.
- you can configure a project to always run on a particular slave machine or a particular type of slave machine,
or simply let jenkins pick the next available slave.